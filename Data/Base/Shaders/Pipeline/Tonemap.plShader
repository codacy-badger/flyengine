[PLATFORMS]
ALL


[COMPUTESHADER]

#include <Shaders/Common/Utils.h>
#include <Shaders/Common/Tonemapping.h>

#include "TonemapConstants.h"
  
float3 tonemap(float3 color)
{
  switch (ToneMappingMode)
  {
    case 0: return ToneMapping_AMD(color, HDRMax, Contrast, Shoulder, MidIn, MidOut);
    case 1: return ToneMapping_ACES(color);
    case 2: return ToneMapping_Reinhard(color);
    case 3: return ToneMapping_Uncharted2(color);
    default: return ToneMapping_Linear(color);
  }
}

Texture2D InputTexture;
RWTexture2D<float4> Output;

[numthreads(POSTPROCESS_BLOCKSIZE , POSTPROCESS_BLOCKSIZE , 1)]
void main(uint3 threadId : SV_DispatchThreadID)
{
  // Out of bounds check
  if (any(int2(threadId.xy) >= ViewportSize.xy))
    return;

  // Tone map and gamma correct
  float4 color = InputTexture[threadId.xy];
  Output[threadId.xy] = float4(LinearToSrgb(tonemap(color.rgb)), color.a);
}
