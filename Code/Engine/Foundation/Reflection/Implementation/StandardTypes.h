#pragma once

/// \file

#include <Foundation/Reflection/Implementation/AbstractProperty.h>
#include <Foundation/Reflection/Implementation/DynamicRTTI.h>
#include <Foundation/Reflection/Implementation/RTTI.h>
#include <Foundation/Types/Variant.h>
#include <Foundation/Types/Interval.h>

PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plEnumBase);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plBitflagsBase);

PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plReflectedClass);

// *********************************************
// ***** Standard POD Types for Properties *****

PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, bool);

PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, float);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, double);

PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plInt8);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plUInt8);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plInt16);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plUInt16);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plInt32);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plUInt32);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plInt64);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plUInt64);

// macros won't work with 'const char*'
using plConstCharPtr = const char*;
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plConstCharPtr);

PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plTime);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plColor);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plColorBaseUB);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plColorGammaUB);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plColorLinearUB);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec2);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec3);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec4);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec2I32);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec3I32);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec4I32);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec2U32);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec3U32);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVec4U32);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plQuat);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plMat3);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plMat4);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plTransform);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plBasisAxis);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plUuid);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plAngle);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plFloatInterval);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plIntInterval);

PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVariant);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVariantArray);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVariantDictionary);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plString);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plUntrackedString);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plStringView);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plDataBuffer);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plHashedString);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plTempHashedString);

// **********************************************************************
// ***** Various RTTI infos that can't be put next to their classes *****

PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plTypeFlags);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plPropertyFlags);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plFunctionType);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plVariantType);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plPropertyCategory);
PL_DECLARE_REFLECTABLE_TYPE(PL_FOUNDATION_DLL, plComparisonOperator);
